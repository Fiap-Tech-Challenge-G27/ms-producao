{
	"info": {
		"_postman_id": "f40a0544-1122-4ed9-88e9-fd5eb10762c4",
		"name": "Fiap_TechChallenge_G27",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33698690"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
									"context.set(\"access_token\", jsonData.access_token);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cpf\": \"12345678910\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authEndpoint}}/auth",
							"host": [
								"{{authEndpoint}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastCategoryId\", jsonData.id);",
							"    context.set(\"_lastCategorySlug\", jsonData.slug);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"xpto5\",\n    \"slug\": \"xpto5\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastCategoryId\", jsonData[0].id);",
							"    context.set(\"_lastCategorySlug\", jsonData[0].slug);",
							"}",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastProductId\", jsonData.id);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomProductName}}\",\n    \"description\": \"{{$randomProductName}} description\",\n    \"price\": {{$randomPrice}},\n    \"quantity\": {{$randomInt}},\n    \"categoryId\": \"{{_lastCategoryId}}\",\n    \"status\": \"active\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastProductId\", jsonData[0].id);",
							"}",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastCustomerId\", jsonData.id);",
							"    context.set(\"_lastCustomerCpf\", jsonData.cpf);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"cpf\": \"12345678913\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/customers",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all customers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('Response body is an array', function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/customers",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastCustomerId\", jsonData.id);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"orderProducts\": [\n        {\n            \"productId\": \"{{_lastProductId}}\",\n            \"amount\": 3\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastCustomerId\", jsonData.id);",
							"}",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://im6iimu7j0.execute-api.us-east-1.amazonaws.com/lanchonete",
			"type": "string"
		},
		{
			"key": "authEndpoint",
			"value": "https://im6iimu7j0.execute-api.us-east-1.amazonaws.com/lanchonete",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "_lastCategoryID",
			"value": ""
		},
		{
			"key": "_lastCustomerId",
			"value": ""
		},
		{
			"key": "_lastCustomerCpf",
			"value": ""
		},
		{
			"key": "_lastProductId",
			"value": ""
		},
		{
			"key": "_lastCategoryId",
			"value": ""
		},
		{
			"key": "_lastCategorySlug",
			"value": ""
		}
	]
}